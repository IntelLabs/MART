# We simply wrap a torchvision object detection model for validation.
defaults:
  - modular
  - /model/modules@modules.preprocessor: tuple_normalizer

training_step_log: ???

training_sequence: ???

validation_sequence: ???

test_sequence: ???

modules:
  losses_and_detections:
    # Return losses in the training mode and predictions in the eval mode in one pass.
    _target_: mart.models.DualMode
    model:
      _target_: mart.nn.load_state_dict
      weights_fpath: ???
      model:
        _target_: ???

  loss:
    _target_: mart.nn.Sum

  output:
    _target_: mart.nn.ReturnKwargs
